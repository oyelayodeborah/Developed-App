@model IEnumerable<KABE_Food_Ordering_System.Models.Order>

@{
    ViewBag.Title = "View Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (ViewBag.Message != null)
{
    if (ViewBag.Message == "Success")
    {
        <div class="alert alert-success">
            <p>@ViewBag.Message <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

        </div>

    }
    else if (ViewBag.Message == "Exist")
    {
        <div class="alert alert-error">
            <p>Branch Name Exist <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

        </div>

    }
    else if (ViewBag.Message == "Error")
    {
        <div class="alert alert-error">
            <p>@ViewBag.Message <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

        </div>

    }
}
@{
    var getRestaurant = new KABE_Food_Ordering_System.Models.User();
}
<table class="table table-bordered table-striped table-hover table-responsive table-condensed" id="customers">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TransactionReference)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.CardNumber)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.FoodId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FoodQuantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RestaurantId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                Delivery Location
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDateTime)

            </th>
            <th>
                Delivery Date and Time
            </th>
            <th>Actions 1</th>
            <th>Actions 2</th>

        </tr>
    </thead>

    <tbody>
        @if (Model==null)
        {
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        }
        else if (Model != null)
        {
            foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TransactionReference)
                </td>
                @*<td>
                    @{
                        var CardNumber = "";
                        if (item.CardNumber == "00")
                        {
                            CardNumber = "NIL";
                        }
                        else
                        {
                            CardNumber = item.CardNumber;
                        }
                    }
                    @CardNumber
                </td>*@

                <td>
                    @{
                        var getFood = new KABE_Food_Ordering_System.Logic.FoodLogic().Get(Convert.ToInt32(item.FoodId));
                    }
                    @getFood.Name
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.FoodQuantity)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>

                <td>
                    @{
                        getRestaurant = new KABE_Food_Ordering_System.Logic.UserLogic().Get(Convert.ToInt32(item.RestaurantId));
                    }
                    @getRestaurant.Name
                </td>

                <td>

                    @Html.DisplayFor(modelItem => item.Status)
                </td>

                <td>
                    @{
                        var getLocation = new KABE_Food_Ordering_System.Logic.LocationLogic().Get(Convert.ToInt32(item.LocationId));
                    }
                    @item.ResidentialAddress, @getLocation.Name
                </td>
                <td>

                    @Html.DisplayFor(modelItem => item.OrderDateTime)
                </td>
                <td>

                    @Html.DisplayFor(modelItem => item.DeliveryDateTime)
                </td>

                <td>
                    @{
                        var Status = item.Status;
                        var Foodprice = 0;
                        if (item.FoodQuantity != 0)
                        {
                            Foodprice = Convert.ToInt32(item.Amount) / Convert.ToInt32(item.FoodQuantity);
                        }
                        else
                        {
                            Foodprice = Convert.ToInt32(item.Amount) / 1;
                        }
                        if (Status == KABE_Food_Ordering_System.Models.OrderStatus.NotPaid)
                        {
                            //Session["OrderId"] = item.Id;
                            <button>
                                <a href=@Url.Action("Pay", new {id =item.Id})>Pay For Order</a>
                            </button>
                        }
                        else if (Status == KABE_Food_Ordering_System.Models.OrderStatus.Pending)
                        {
                            //Session["OrderId"] = item.Id;
                            <button>
                                <a href=@Url.Action("Cancel", new { id = item.Id })>Cancel Order</a>
                            </button>
                        }
                        else if (Status == KABE_Food_Ordering_System.Models.OrderStatus.Delivered)
                        {
                            <label>Transaction Complete</label>
                        }
                        else if (Status == KABE_Food_Ordering_System.Models.OrderStatus.Cancelled)
                        {
                            <label>Order Cancelled</label>
                        }
                    }
                </td>
                <td>
                    @{

                        //Session["OrderId"] = item.Id;
                        <button>
                            <a href=@Url.Action("Search")>Order Again</a>
                        </button>
                    }
                </td>


            </tr>
                            }
        }
    </tbody>

</table>
@section ViewSpecificJavascript
    {
    <script>
        $(document).ready(function () {
            setTimeout(function () {
                $(".alert").fadeOut(100, null);
            },
                3000);
        });
        $("#customers").dataTable();

    </script>

}